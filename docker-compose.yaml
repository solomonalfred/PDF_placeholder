version: "3"

services:
  traefik:
    image: 'traefik'
    command:
      - '--api=true'
      - '--api.insecure=true'
      - '--api.dashboard=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.mytlschallenge.acme.tlschallenge=true'
      - '--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}'
      - '--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json'
    ports:
      - '443:443'
      - "7777:7777"
    volumes:
      - ${DATA_FOLDER}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: tfsp
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: pdf_placeholder
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data

  api:
    container_name: pdf_convertor_python
    image: pdf_convertor_python
    build:
      context: ./
      dockerfile: "docker/api/Dockerfile"
    volumes:
      - ./files:/files
    ports:
      - "7777:7777"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.pdfkabot.ru`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=myresolver"
    restart: always
    environment:
      DB_HOST: postgres
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_PORT: ${DB_PORT}

volumes:
  postgres_data:
